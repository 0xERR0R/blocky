// Code generated by mockery v2.23.1. DO NOT EDIT.

package api

import mock "github.com/stretchr/testify/mock"

// MockListRefresher is an autogenerated mock type for the ListRefresher type
type MockListRefresher struct {
	mock.Mock
}

type MockListRefresher_Expecter struct {
	mock *mock.Mock
}

func (_m *MockListRefresher) EXPECT() *MockListRefresher_Expecter {
	return &MockListRefresher_Expecter{mock: &_m.Mock}
}

// RefreshLists provides a mock function with given fields:
func (_m *MockListRefresher) RefreshLists() {
	_m.Called()
}

// MockListRefresher_RefreshLists_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RefreshLists'
type MockListRefresher_RefreshLists_Call struct {
	*mock.Call
}

// RefreshLists is a helper method to define mock.On call
func (_e *MockListRefresher_Expecter) RefreshLists() *MockListRefresher_RefreshLists_Call {
	return &MockListRefresher_RefreshLists_Call{Call: _e.mock.On("RefreshLists")}
}

func (_c *MockListRefresher_RefreshLists_Call) Run(run func()) *MockListRefresher_RefreshLists_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockListRefresher_RefreshLists_Call) Return() *MockListRefresher_RefreshLists_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockListRefresher_RefreshLists_Call) RunAndReturn(run func()) *MockListRefresher_RefreshLists_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockListRefresher interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockListRefresher creates a new instance of MockListRefresher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockListRefresher(t mockConstructorTestingTNewMockListRefresher) *MockListRefresher {
	mock := &MockListRefresher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
