name: Development docker build
on:
  push:
    branches:
      - development
      - fb-*

jobs:
  tags:
    runs-on: ubuntu-latest
    outputs:
      dh: ${{ steps.get_dh.outputs.tag }}
      gh: ${{ steps.get_gh.outputs.tag }}
    steps:
      - name: Extract branch name as tag base
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      
      - name: Get GitHub tag
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ghcr.io/${{github.repository}}:${{steps.extract_branch.outputs.branch}})"
        id: get_gh

      - name: Get DockerHub tag
        shell: bash
        run: echo "##[set-output name=tag;]$(echo spx01/blocky:${{steps.extract_branch.outputs.branch}})"
        id: get_dh

  docker:
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ needs.tags.outputs.gh }}
            
      - name: Login to DockerHub
        if: github.repository_owner == '0xERR0R'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Re-tag
        if: github.repository_owner == '0xERR0R'
        shell: bash
        run: |
          docker tag ${{ needs.tags.outputs.gh }} ${{ needs.tags.outputs.dh }}
          docker push ${{ needs.tags.outputs.dh }}

  trivy-scan:
    runs-on: ubuntu-latest
    needs: [vars, docker-gitlab]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.tags.outputs.gh }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'