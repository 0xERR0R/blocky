name: Development docker build
on:
  push:
    branches:
      - development
      - fb-*

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_all.outputs.tag }}
      ghtag: ${{ steps.get_gh.outputs.tag }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Get GitHub tag
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ghcr.io/${{github.repository}}:${{steps.extract_branch.outputs.branch}})"
        id: get_gh

      - name: Get all tags
        shell: bash
        run: |
          RESPONSE="${{steps.get_gh.outputs.tag}}"
          if [ "${{github.repository_owner}}" == '0xERR0R' ]
          then
            RESPONSE+="\nspx01/blocky:${{steps.extract_branch.outputs.branch}}"
          fi
          echo "##[set-output name=tag;]$(echo ${RESPONSE})"
        id: get_all

  docker-gitlab:
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Login to DockerHub
        if: github.repository_owner == '0xERR0R'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          tags: |
            ${{ needs.vars.outputs.tag }}

      # Fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  trivy-scan:
    runs-on: ubuntu-latest
    needs: [vars, docker-gitlab]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.vars.outputs.ghtag }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'