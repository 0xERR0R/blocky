name: GoReleaser Test

on:
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build binaries with goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2

      - name: Run GoReleaser check
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: check
      
      - name: Run GoReleaser build
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: build --clean --snapshot

      - name: Upload dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist_folder
          path: dist
  
  linux-test-arm:
    name: Test linux arm binaries
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        distro: [ubuntu16.04, ubuntu18.04, ubuntu20.04, ubuntu22.04, bullseye, buster, stretch]
        arch: [armv7,aarch64]
        include:
          - distro: stretch
            arch: armv6
          - distro: buster
            arch: armv6
          - distro: bullseye
            arch: armv6   
    steps:
      - name: Download dist folder
        id: download
        uses: actions/download-artifact@v3
        with:
          name: dist_folder

      - name: Test binary
        uses: uraimo/run-on-arch-action@v2
        with:
          distro: ${{ matrix.distro }}
          arch: ${{ matrix.arch }}
          dockerRunArgs: |
            --volume "${{steps.download.outputs.download-path}}:/dist"
          shell: /bin/sh
          run: |
            case "${{ matrix.arch }}" in
              aarch64)
                chmod +x /dist/blocky_linux_arm64/blocky
                /dist/blocky_linux_arm64/blocky version
                ;;
              armv6)
                chmod +x /dist/blocky_linux_arm_6/blocky
                /dist/blocky_linux_arm_6/blocky version
                ;;
              armv7)
                chmod +x /dist/blocky_linux_arm_7/blocky
                /dist/blocky_linux_arm_7/blocky version
                ;;
            esac

  linux-test-ubuntu20:
    name: Test amd64 binary on ubuntu 20.04
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Download dist folder
        id: download
        uses: actions/download-artifact@v3
        with:
          name: dist_folder

      - name: Test binary
        shell: bash
        run: |
          chmod +x ${{steps.download.outputs.download-path}}/blocky_linux_amd64_v1/blocky
          ${{steps.download.outputs.download-path}}/blocky_linux_amd64_v1/blocky version

  linux-test-ubuntu22:
    name: Test amd64 binary on ubuntu 22.04
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Download dist folder
        id: download
        uses: actions/download-artifact@v3
        with:
          name: dist_folder

      - name: Test binary
        shell: bash
        run: |
          chmod +x ${{steps.download.outputs.download-path}}/blocky_linux_amd64_v1/blocky
          ${{steps.download.outputs.download-path}}/blocky_linux_amd64_v1/blocky version