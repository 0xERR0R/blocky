name: GoReleaser Test

on:
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build binaries with goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2

      - name: Run GoReleaser check
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: check
      
      - name: Run GoReleaser build
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: build --clean --snapshot

      - name: Upload dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist_folder
          path: dist
          retention-days: 1
  
  unix-tests:
    name: Test linux arm binaries
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        distro: [ubuntu16.04, ubuntu18.04, ubuntu20.04, ubuntu22.04, bullseye, buster, stretch]
        arch: [armv7,aarch64]
        os: [linux]
        runner: [ubuntu-latest]
        include:
          - distro: stretch
            arch: armv6
          - distro: buster
            arch: armv6
          - distro: bullseye
            arch: armv6
          - distro: ubuntu20.04
            arch: amd64
            runner: ubuntu-20.04
          - distro: ubuntu22.04
            arch: amd64
            runner: ubuntu-22.04
          - distro: macos
            runner: macos-11
            arch: amd64
            os: darwin
          - distro: macos
            runner: macos-12
            arch: amd64
            os: darwin
          
    steps:
      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist_folder
          path: /dist

      - name: Get binary path
        id: get_path
        shell: bash
        run: |
          archs=(["aarch64"]="arm64" ["armv6"]="arm_6" ["armv7"]="arm_7" ["amd64"]="amd64_v1")
          BINPATH="/dist/blocky_${{ matrix.os }}_${archs[ ${{ matrix.arch }} ]}/blocky"
          echo "bin=${BINPATH}" >> $GITHUB_OUTPUT
          echo "Binary path: ${BINPATH}"

      - name: Enable execution
        shell: bash
        run: |
          chmod +x ${{ steps.get_path.outputs.bin }}

      - name: Test binary on ${{ matrix.arch }}
        if: matrix.arch != 'amd64' 
        uses: uraimo/run-on-arch-action@v2
        with:
          distro: ${{ matrix.distro }}
          arch: ${{ matrix.arch }}
          dockerRunArgs: |
            --volume "/dist:/dist"
          shell: /bin/sh
          run: |
            ${{ steps.get_path.outputs.bin }} version
      
      - name: Test binary on amd64
        if: matrix.arch == 'amd64'
        shell: bash
        run: |
          ${{ steps.get_path.outputs.bin }} version

  windows-test:
    name: Test windows binary
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist_folder
          path: C:/dist
      
      - name: Test binary
        shell: cmd
        run: |
          C:/dist/blocky_windows_amd64_v1/blocky.exe version